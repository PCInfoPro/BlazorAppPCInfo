@page "/computers"
@inject IStringLocalizer<BlazorAppPCInfo.Computers> Localizer
@inject IStringLocalizer<Resources> LocResources

<PageTitle>Computers</PageTitle>

<h3>@Localizer["head"]</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red">@errorMessage</p>
}

<div class="computers-container">
    @foreach (var computer in computers)
    {
        <a href="/computer/@computer.ComputerID" class="computer-card">
            <div class="image-wrapper">
                <img src="@imageUrl" alt="Imagen de @computer.Name" class="computer-image"/>
            </div>
            <h4>@computer.Name</h4>
            <ul>
                <li><i class="bi bi-building"></i> @LocResources["brand"]: @computer.Brand</li>
                <li><i class="bi bi-cpu"></i> @LocResources["processor"]: @computer.Processor</li>
                <li><i class="bi bi-memory"></i> @LocResources["ram"]: @computer.RAM</li>
                <li><i class="bi bi-hdd"></i> @LocResources["memory"]: @computer.Storage</li>
                <li><i class="bi bi-gpu-card"></i> @LocResources["GraphicsCardModel"]: @computer.GraphicCard</li>
                <li><i class="bi bi-currency-dollar"></i> @LocResources["price"]: $@computer.Price</li>
            </ul>
        </a>
    }
</div>

@code {
    private static readonly Logger logger = LogManager.GetCurrentClassLogger();

    private List<ComputersSimpleDetail> computers = new List<ComputersSimpleDetail>();
    private LoginUser user = new LoginUser 
    {
        Username = "admin",
        Password = "password"
    };
    private string errorMessage;

    private string? imageUrl;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await APIService.Login(user);
            try
            {
                computers = await APIService.GetComputersSimpleDetails();
                BlobApiService.URL? json = await BlobApiService.GetBlobUrlsAsync("xiaomi-mi-notebook-pro.jpg");
                imageUrl = json.url;
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error: {ex.Message}");
                Console.WriteLine($"{ex.StackTrace}");
                logger.Error(@LocResources["loadError"] + ex.Message + ex.StackTrace);
            }
        }
        catch (Exception ex)
        {
            errorMessage = @Localizer["loginfail"];            
        }
    }
}
