@page "/computers"
@using UtilInfoPC.Models
@using System.Net.Http
@using System.Text.Json

<h3>Listado de Ordenadores</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red">@errorMessage</p>
}

<div class="computers-container">
    @foreach (var computer in computers)
    {
        <a href="/computer/@computer.Id" class="computer-card">
            <div class="image-wrapper">
                <img src="@computer.ImageUrl" alt="Imagen de @computer.Name" class="computer-image"/>
            </div>
            <h4>@computer.Name</h4>
            <ul>
                <li><i class="bi bi-cpu"></i> Procesador: @computer.Processor</li>
                <li><i class="bi bi-memory"></i> Memoria RAM: @computer.RAM</li>
                <li><i class="bi bi-hdd"></i> Almacenamiento: @computer.Storage</li>
                <li><i class="bi bi-currency-dollar"></i> Precio: $@computer.Price</li>
            </ul>
        </a>
    }
</div>

@code {
    private static readonly Logger logger = LogManager.GetCurrentClassLogger();

    private List<Computer> computers = new List<Computer>();
    private LoginUser user = new LoginUser 
    {
        Username = "admin",
        Password = "password"
    };
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            APIService.Login(user);
            try
            {
                computers = await APIService.GetComputers();
            }
            catch (Exception ex)
            {
                logger.Error("Error en carga de datos: " + ex.Message + ex.StackTrace);
            }

            string a = "";
        }
        catch (Exception ex)
        {
            errorMessage = "Login fallido. Por favor verifica tus credenciales.";            
        }

        @* computers = await Http.GetFromJsonAsync<List<Computer>>("https://apipcdata-bmbuf7bagcepajd3.canadaeast-01.azurewebsites.net/api/computers"); *@
    }

    private async Task Login()
    {
        @* token = await APIService.Login(user);

        if (!string.IsNullOrEmpty(token))
        {
            await LoadOrdenadores();
        }
        else
        {
            errorMessage = "Login fallido. Por favor verifica tus credenciales.";
        } *@
    }
    private async Task LoadOrdenadores()
    {
        @* computers = await APIService.GetOrdenadores(token); *@
    }
}
