@inject Blazored.Modal.Services.IModalService ModalService

<div class="modal-content p-4">    
    <EditForm Model="@brandModel" OnValidSubmit="HandleValidSubmit" class="needs-validation">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" />

        <div class="form-group mb-3">
            <label for="brandName" class="form-label">Nombre de la Marca:</label>
            <InputText @bind-Value="brandModel.Name" id="brandName" class="form-control" placeholder="Ejemplo: Apple, Dell, etc." />
        </div>
        
        <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-secondary me-2" @onclick="CloseModal">Cancelar</button>
            <button type="submit" class="btn btn-primary">Guardar Marca</button>
        </div>
    </EditForm>
</div>

@code {
    [CascadingParameter] public Blazored.Modal.BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter]
    public EventCallback OnBrandAdded { get; set; }
    private static readonly Logger logger = LogManager.GetCurrentClassLogger();
    private Brand brandModel = new Brand();

    private async Task HandleValidSubmit()
    {
        if (await APIService.PostBrands(brandModel))
        {
            await OnBrandAdded.InvokeAsync();
            await BlazoredModal.CloseAsync();
        }
        else
        {
            logger.Error("Error al a√±adir la marca.");
        }
    }

    private void CloseModal()
    {
        BlazoredModal.CancelAsync();
    }
}

