@page "/searchcomputers"
@rendermode InteractiveServer

<h3>Buscar Ordenadores</h3>


<!-- Cuadro de búsqueda -->
<input type="text" @bind="searchTerm" placeholder="Buscar por nombre..." class="form-control" />

<!-- Filtro por procesador -->
<select @bind="selectedProcessor" class="form-control">
    <option value="">Todos los procesadores</option>
    <option value="Intel">Intel</option>
    <option value="AMD">AMD</option>
</select>

<!-- Filtro por RAM -->
<select @bind="selectedRAM" class="form-control">
    <option value="">Todas las RAMs</option>
    <option value="8GB">8GB</option>
    <option value="16GB">16GB</option>
    <option value="32GB">32GB</option>
</select>

<!-- Filtro por rango de precios -->
<input type="number" @bind="minPrice" placeholder="Precio mínimo" class="form-control" />
<input type="number" @bind="maxPrice" placeholder="Precio máximo" class="form-control" />

<p>Valor de búsqueda: @searchTerm</p>
<p>Procesador seleccionado: @selectedProcessor</p>
<p>RAM seleccionada: @selectedRAM</p>
<p>Precio mínimo: @minPrice</p>
<p>Precio máximo: @maxPrice</p>


<!-- Lista de ordenadores filtrados -->
<div class="computer-list">
    @if (filteredComputers.Any())
    {
        <div class="computers-container">
            @foreach (var computer in filteredComputers)
            {
                <a href="/computer/@computer.Id" class="computer-card">
                    <div class="image-wrapper">
                        <img src="@computer.ImageUrl" alt="Imagen de @computer.Name" class="computer-image" />
                    </div>
                    <h4>@computer.Name</h4>
                    <ul>
                        <li><i class="bi bi-cpu"></i> Procesador: @computer.Processor</li>
                        <li><i class="bi bi-memory"></i> Memoria RAM: @computer.RAM</li>
                        <li><i class="bi bi-hdd"></i> Almacenamiento: @computer.Storage</li>
                        <li><i class="bi bi-currency-dollar"></i> Precio: $@computer.Price</li>
                    </ul>
                </a>
            }
        </div>
    }
    else
    {
        <p>No se encontraron ordenadores que coincidan con los filtros.</p>
    }
</div>

@code {
    public class Computer
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Processor { get; set; }
        public string RAM { get; set; }
        public string Storage { get; set; }
        public decimal Price { get; set; }
        public string ImageUrl { get; set; }
    }

    // Campos de filtro
    private string searchTerm = string.Empty;
    private string selectedProcessor = string.Empty;
    private string selectedRAM = string.Empty;
    private decimal? minPrice;
    private decimal? maxPrice;

    // Lista de ordenadores originales
    private List<Computer> computers = new List<Computer>
    {
        new Computer { Id = 1, Name = "PC 1", Processor = "Intel i7", RAM = "16GB", Storage = "512GB SSD", Price = 1200, ImageUrl = "https://imgs.search.brave.com/OGm6SAqrFv_YJ0vXWGJdpU2fGwI2t2p_8E7gsHmEfUg/rs:fit:500:0:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5pc3RvY2twaG90/by5jb20vaWQvMTY0/NjM3MDc5L2VzL2Zv/dG8vY29tcHV0YWRv/cmEtcG9ydCVDMyVB/MXRpbC5qcGc_cz02/MTJ4NjEyJnc9MCZr/PTIwJmM9ZXdZeHFa/M214RjZzVVVFd1RE/VlAxdHRsZWRNeFdS/QkFMZ0RXNXptSlZC/ND0" },
        new Computer { Id = 2, Name = "PC 2", Processor = "AMD Ryzen 5", RAM = "8GB", Storage = "256GB SSD", Price = 800, ImageUrl = "https://imgs.search.brave.com/OGm6SAqrFv_YJ0vXWGJdpU2fGwI2t2p_8E7gsHmEfUg/rs:fit:500:0:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5pc3RvY2twaG90/by5jb20vaWQvMTY0/NjM3MDc5L2VzL2Zv/dG8vY29tcHV0YWRv/cmEtcG9ydCVDMyVB/MXRpbC5qcGc_cz02/MTJ4NjEyJnc9MCZr/PTIwJmM9ZXdZeHFa/M214RjZzVVVFd1RE/VlAxdHRsZWRNeFdS/QkFMZ0RXNXptSlZC/ND0" },
        new Computer { Id = 3, Name = "PC 3", Processor = "Intel i5", RAM = "8GB", Storage = "1TB HDD", Price = 600, ImageUrl = "https://imgs.search.brave.com/OGm6SAqrFv_YJ0vXWGJdpU2fGwI2t2p_8E7gsHmEfUg/rs:fit:500:0:0:0/g:ce/aHR0cHM6Ly9tZWRp/YS5pc3RvY2twaG90/by5jb20vaWQvMTY0/NjM3MDc5L2VzL2Zv/dG8vY29tcHV0YWRv/cmEtcG9ydCVDMyVB/MXRpbC5qcGc_cz02/MTJ4NjEyJnc9MCZr/PTIwJmM9ZXdZeHFa/M214RjZzVVVFd1RE/VlAxdHRsZWRNeFdS/QkFMZ0RXNXptSlZC/ND0" },
        // Agrega más ordenadores...
    };

    // Lógica de filtrado aplicada
    private IEnumerable<Computer> filteredComputers => computers.Where(c =>
        (string.IsNullOrWhiteSpace(searchTerm) || c.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) &&
        (string.IsNullOrWhiteSpace(selectedProcessor) || c.Processor.Contains(selectedProcessor, StringComparison.OrdinalIgnoreCase)) &&
        (string.IsNullOrWhiteSpace(selectedRAM) || c.RAM.Equals(selectedRAM, StringComparison.OrdinalIgnoreCase)) &&
        (!minPrice.HasValue || c.Price >= minPrice) &&
        (!maxPrice.HasValue || c.Price <= maxPrice));
}
